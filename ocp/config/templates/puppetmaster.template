apiVersion: v1
kind: Template
metadata:
  name: puppetmaster-template
  annotations:
    description: "Docker Puppetmaster template"
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: puppetserver-code
      env: ${ENVIRONMENT}
    name: puppetserver-code-${ENVIRONMENT}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: puppetserver-code-${ENVIRONMENT}
      deploymentconfig: puppetserver-code-${ENVIRONMENT}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: puppetserver-code-${ENVIRONMENT}
          deploymentconfig: puppetserver-code-${ENVIRONMENT}
          env: ${ENVIRONMENT}
      spec:
        containers:
        - image: docker-registry.default.svc:5000/${PROJECT}/puppetserver-code-${ENVIRONMENT}:latest
          imagePullPolicy: Always
          name: puppetserver-code-${ENVIRONMENT}
          ports:
          - containerPort: 8140
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /thycotic
            name: thycotic
          - mountPath: /certs
            name: cert-volume
            readOnly: true
          - mountPath: /etc/puppet/
            name: puppet
          - mountPath: /opt/puppetlabs/server/data/puppetserver/yaml/facts
            name: facts
          - mountPath: /opt/puppetlabs/server/data/puppetserver/yaml/foreman
            name: foreman
        - command:
          - /bin/sh
          - -c
          - sleep 30 && while true; do echo 'Pushing facts to foreman' && date && /opt/puppetlabs/bin/puppetserver
            ruby /usr/local/bin/external_node_v2.rb --push-facts-parallel && sleep 1800;
            done
          image: docker-registry.default.svc:5000/${PROJECT}/puppetserver-code-${ENVIRONMENT}:latest
          imagePullPolicy: Always
          name: facts-to-foreman
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/puppet/
            name: puppet
          - mountPath: /opt/puppetlabs/server/data/puppetserver/yaml/facts
            name: facts
          - mountPath: /opt/puppetlabs/server/data/puppetserver/yaml/foreman
            name: foreman
          - mountPath: /certs
            name: cert-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: thycotic
        - emptyDir: {}
          name: facts
        - emptyDir: {}
          name: foreman
        - name: cert-volume
          secret:
            defaultMode: 420
            secretName: puppetmaster-certificates
        - configMap:
            defaultMode: 420
            items:
            - key: thycotic.conf
              path: thycotic.conf
            - key: foreman.yaml
              path: foreman.yaml
            - key: puppet.conf
              path: puppet.conf
            name: puppetserver-configuration
          name: puppet
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - puppetserver-code-${ENVIRONMENT}
        from:
          kind: ImageStreamTag
          name: puppetserver-code-${ENVIRONMENT}:latest
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: build-puppetserver-docker-image
    name: build-puppetserver-docker-image
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: puppetserver:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: ${DOCKERREPO}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhel7:latest
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers: []
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: build-puppetserver-code
    name: build-puppetserver-code
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: puppetserver-code:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: ${MONOREPO}
      sourceSecret:
        name: github-deploy-key
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: puppetserver:latest
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers: []
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
    labels:
      app: puppetserver-code-${ENVIRONMENT}
    name: puppetserver-code-${ENVIRONMENT}
  spec:
    host: ${ENVIRONMENT}-${CUSTOMER}.openshift-puppetmaster.cegeka.be
    port:
      targetPort: 443-tcp
    tls:
      termination: passthrough
    to:
      kind: Service
      name: puppetserver-code-${ENVIRONMENT}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: puppetserver-code-${ENVIRONMENT}
    name: puppetserver-code-${ENVIRONMENT}
  spec:
    ports:
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 8140
    selector:
      deploymentconfig: puppetserver-code-${ENVIRONMENT}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
- description: Puppetmaster CUSTOMER
  name: CUSTOMER
- description: Puppetmaster Code Repo git@github.com
  name: MONOREPO
- description:  Docker Puppetmaster Code Repo git@github.com
  name: DOCKERREPO
- description: Puppetmaster Environment
  name: ENVIRONMENT
- description: Project for imagestream
  name: PROJECT
